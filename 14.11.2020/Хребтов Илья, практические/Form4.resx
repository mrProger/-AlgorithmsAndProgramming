<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        FYUuJTFxz4QID//Z
</value>
  </data>
</root>